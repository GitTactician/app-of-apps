{{- range .Values.applications }}
  # Determine appPath with fallback
  {{- $basePath := .appPath }}
  {{- if not $basePath }}
    {{- $basePath = "apps" }}
  {{- end }}
  {{- $appPath := printf "%s/%s" $basePath .name }}

  # Handle repoURL with fallback
  {{- $repoURL := .repoURL }}
  {{- if not $repoURL }}
    {{- $repoURL = $.Values.spec.source.repoURL }}
  {{- end }}

  # Add destination server
  {{- $destinationServer := .destinationServer }}
  {{- if not $destinationServer }}
    {{- $destinationServer = $.Values.spec.destination.server }}
  {{- end }}

  # Add project
  {{- $project := .project }}
  {{- if not $project }}
    {{- $project = $.Values.spec.project }}
  {{- end }}
  {{- if not $project }}
    {{- $project = "default" }}
  {{- end }}

  # Handle targetRevision with fallback
  {{- $targetRevision := .targetRevision }}
  {{- if not $targetRevision }}
    {{- $targetRevision = $.Values.spec.source.targetRevision }}
  {{- end }}
  {{- if not $targetRevision }}
    {{- $targetRevision = "main" }}  # Default to 'main' if no targetRevision
  {{- end }}

  # Handle syncPolicy with two-level fallback
  {{- $appSyncPolicy := .syncPolicy }}
  {{- if not $appSyncPolicy }}
    {{- $appSyncPolicy = $.Values.spec.syncPolicy }}
  {{- end }}

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .name }}
  namespace: argocd
spec:
  project: {{ $project }}
  destination:
    server: {{ $destinationServer }}
    namespace: {{ .namespace }}
  source:
    repoURL: {{ $repoURL }}
    targetRevision: {{ $targetRevision }}
    path: {{ $appPath }}
  {{- if $appSyncPolicy }}
  syncPolicy:
    automated:
      prune: {{ default "false" $appSyncPolicy.automated.prune }}
      selfHeal: {{ default "false" $appSyncPolicy.automated.selfHeal }}
    {{- if $appSyncPolicy.syncOptions }}
    syncOptions:
      - CreateNamespace={{ default "false" $appSyncPolicy.syncOptions.createNamespace }}
    {{- end }}
  {{- end }}
{{- end }}
